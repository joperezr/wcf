<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Capture OSGroup passed to command line for setting default FilterToOSGroup value below -->
    <_OriginalOSGroup>$(OSGroup)</_OriginalOSGroup>
  </PropertyGroup>
  
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <ItemGroup>
    <!-- *** start WCF Content *** -->
    <ExcludeProjects Include="System.Private.ServiceModel\tests\Scenarios\SelfHostWcfService\WcfService.csproj" />
    
    <Project Include="*\tests\**\*.builds" Exclude="@(ExcludeProjects)">
    <!-- *** end WCF Content *** -->
      <BuildAllOSGroups Condition="'$(OSGroup)' != '' OR '$(FilterToOSGroup)' != ''">false</BuildAllOSGroups>
      <FilterToOSGroup Condition="'$(_OriginalOSGroup)' == ''">$(OSEnvironment)</FilterToOSGroup>
    </Project>
  </ItemGroup>

  <Import Project="$(ToolsDir)versioning.targets" Condition="Exists('$(ToolsDir)versioning.targets')" />
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.traversal.targets))\dir.traversal.targets" />
  <!-- Hook that can be used to insert custom build tasks to the build process such as setup and/or cleanup tasks -->
  <Import Project="test.override.targets" Condition="Exists('test.override.targets')" />
  
  <!-- Make Sure that CreateOrUpdateCurrentVersionFile is the first target that runs. -->
  <PropertyGroup>
    <TraversalBuildDependsOn>
      CreateOrUpdateCurrentVersionFile;
      $(TraversalBuildDependsOn)
    </TraversalBuildDependsOn>
  </PropertyGroup>

</Project>